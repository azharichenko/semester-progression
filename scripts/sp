#!/usr/bin/python3

import argparse
import json
from datetime import date, datetime, timedelta

import progression.api

ONE_DAY = timedelta(days=1)
ONE_WEEK = timedelta(weeks=1)
REGULAR_SEMESTER = timedelta(weeks=16)


parser = argparse.ArgumentParser()
parser.add_argument('--run', action="store_true")
parser.add_argument('--action', '-a', type=str, choices=["new", "edit", "remove"],
                    help="action to perform")
args = parser.parse_args()

if args.run:
    progression.api.start_service_loop()
    # TODO: add a finish to the this


def new_progression_visualization():
    """"""
    # Create/Fetch config directory
    config_path = progression.api.get_config_path(create_if_absent=True)

    # TODO: Automatic start and end date finder? Maybe add on to pittapi with calendar
    start_date = input("Give the start date for the semester (MM/DD/YYYY): ")

    semester_start = datetime.strptime(start_date, '%m/%d/%Y').date()
    semester_end = semester_start + REGULAR_SEMESTER - ONE_DAY

    # Data initialization
    data = {}

    data['start'] = semester_start
    data['end-date'] = semester_end

    data['breaks'] = [
        {
            "title": "springbreak",
            "start": "03/08/2020",
            "end-date": "03/15/2020"
        }
    ]
    data['exams'] = []
    data['finals'] = {
        'start': '04/20/2020',
        'end-date': '04/25/2020'
    }


actions = {
    "new": new_progression_visualization
}

actions[args.action]()
